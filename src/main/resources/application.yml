spring:
  datasource:
    data-password: 123456
    data-username: root
    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:mysql://localhost:3306/ems?characterEncoding=utf8&serverTimezone=UTC
    type: com.alibaba.druid.pool.DruidDataSource
    #初始化连接池 最小连接数 最大连接数

    tomcat:
       initialSize: 5
       min-idle: 5
       maxActive: 10
# 配置获取连接等待超时的时间
       maxWait: 10000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
       timeBetweenEvictionRunsMillis: 60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
       minEvictableIdleTimeMillis: 300000
       validationQuery: SELECT 1 FROM DUAL
       testWhileIdle: true
       testOnBorrow: false
       testOnReturn: false
# 打开PSCache，并且指定每个连接上PSCache的大小
   #   poolPreparedStatements: true
    #  maxPoolPreparedStatementPerConnectionSize: 20
      # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
      #filters: stat,wall,slf4j
      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
    #  connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
      # 合并多个DruidDataSource的监控数据
      #useGlobalDataSourceStat: true

  mvc:
    view:
      prefix: /temolates/
      suffix: .html

  thymeleaf:
    cache: false
  devtools:
    restart:
      enabled: true

  aop:
    auto: true


server:
  port: 8081

mybatis:
  mapper-locations: classpath:mapping/*.xml
  type-aliases-package: com.example.bean


## Redis 配置
## Redis数据库索引（默认为0）
#spring:
#   redis:
#   database: 0
## Redis服务器地址
#    host: 127.0.0.1
## Redis服务器连接端口
#    port: 6379
## Redis服务器连接密码（默认为空）
#   password:
## 连接池最大连接数（使用负值表示没有限制）
#   pool.max-active: 8
## 连接池最大阻塞等待时间（使用负值表示没有限制）
#    pool.max-wait: -1
## 连接池中的最大空闲连接
#    pool.max-idle: 8
## 连接池中的最小空闲连接
#    pool.min-idle: 0
## 连接超时时间（毫秒）
#    timeout: 0

# 下面为连接池的补充设置，应用到上面所有数据源中
#spring.datasource.initialSize=5
#spring.datasource.minIdle=5
#spring.datasource.maxActive=20
# 配置获取连接等待超时的时间
#spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
#spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
#spring.datasource.minEvictableIdleTimeMillis=300000
#spring.datasource.validationQuery=SELECT 1 FROM DUAL
#spring.datasource.testWhileIdle=true
#spring.datasource.testOnBorrow=false
#spring.datasource.testOnReturn=false
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
#spring.datasource.filters=stat,wall,log4j
#spring.datasource.logSlowSql=true
